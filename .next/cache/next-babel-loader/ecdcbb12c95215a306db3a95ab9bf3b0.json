{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nvar IndexPage = function IndexPage(props) {\n  var _useState = useState(props[0]),\n      films = _useState[0],\n      setFilms = _useState[1];\n\n  console.log(films);\n\n  var favCheck = function favCheck() {\n    var favs = JSON.parse(localStorage.getItem(\"favs\"));\n    var list = films.map(function (film) {\n      if (favs.indexOf(film.episode_id) > 0) {\n        __jsx(\"li\", {\n          key: film.episode_id,\n          className: \"fav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, film.title, \" - unFav\");\n      } else {\n        __jsx(\"li\", {\n          key: film.episode_id,\n          className: \"nonfav\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, film.title, \" - Fav\");\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: function handleSearch(filmList) {\n      return setFilms(filmList);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, favCheck()));\n};\n\nIndexPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://swapi.co/api/films/\";\n          _context.next = 3;\n          return fetch(url);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          console.log(\"run\"); //map through data, add a fav boolean column\n          // or compare the list of whats in local storage\n\n          return _context.abrupt(\"return\", [data.results]);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","fetch","Search","IndexPage","props","films","setFilms","console","log","favCheck","favs","JSON","parse","localStorage","getItem","list","map","film","indexOf","episode_id","title","filmList","getInitialProps","url","res","json","data","results"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBACCJ,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CADT;AAAA,MAClBC,KADkB;AAAA,MACXC,QADW;;AAEzBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC7B,UAAIP,IAAI,CAACQ,OAAL,CAAaD,IAAI,CAACE,UAAlB,IAAgC,CAApC,EAAuC;AACrC;AAAI,UAAA,GAAG,EAAEF,IAAI,CAACE,UAAd;AAA0B,UAAA,SAAS,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,IAAI,CAACG,KADR;AAGD,OAJD,MAIO;AACL;AAAI,UAAA,GAAG,EAAEH,IAAI,CAACE,UAAd;AAA0B,UAAA,SAAS,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,IAAI,CAACG,KADR;AAGD;AACF,KAVY,CAAb;AAWD,GAbD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAE,sBAAAC,QAAQ;AAAA,aAAIf,QAAQ,CAACe,QAAD,CAAZ;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,QAAQ,EAAb,CAHF,CADF;AAOD,CA1BD;;AA4BAN,SAAS,CAACmB,eAAV;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,GADoB,GACd,6BADc;AAAA;AAAA,iBAERtB,KAAK,CAACsB,GAAD,CAFG;;AAAA;AAEpBC,UAAAA,GAFoB;AAAA;AAAA,iBAGPA,GAAG,CAACC,IAAJ,EAHO;;AAAA;AAGpBC,UAAAA,IAHoB;AAK1BnB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAL0B,CAO1B;AACA;;AAR0B,2CASnB,CAACkB,IAAI,CAACC,OAAN,CATmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAYA,eAAexB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  console.log(films);\n\n  const favCheck = () => {\n    const favs = JSON.parse(localStorage.getItem(\"favs\"));\n    const list = films.map(film => {\n      if (favs.indexOf(film.episode_id) > 0) {\n        <li key={film.episode_id} className=\"fav\">\n          {film.title} - unFav\n        </li>;\n      } else {\n        <li key={film.episode_id} className=\"nonfav\">\n          {film.title} - Fav\n        </li>;\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>{favCheck()}</ul>\n    </div>\n  );\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n\n  //map through data, add a fav boolean column\n  // or compare the list of whats in local storage\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}