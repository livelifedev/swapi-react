{"ast":null,"code":"var _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\nimport List from \"../components/list\";\nimport Alert from \"../components/alert\";\n\nconst IndexPage = props => {\n  const {\n    0: films,\n    1: setFilms\n  } = useState(props[0]);\n  const {\n    0: favs,\n    1: setFavs\n  } = useState([]);\n  const {\n    0: toggle,\n    1: setToggle\n  } = useState(false);\n  const {\n    0: showAlert,\n    1: setShowAlert\n  } = useState(false);\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n  }, [toggle]);\n  return __jsx(React.Fragment, null, __jsx(Alert, {\n    showAlert: true,\n    handleClose: () => setShowAlert(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-3887979593\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: filmList => setFilms(filmList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    className: \"jsx-3887979593\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    className: \"jsx-3887979593\" + \" \" + \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(List, {\n    films: films,\n    favs: favs,\n    handleClick: () => setToggle(!toggle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"3887979593\",\n    __self: this\n  }, \".flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.fav{-webkit-order:-1;-ms-flex-order:-1;order:-1;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hucnViaW8vZ2l0aHViX3Byb2plY3RzL3N3YXBpLXJlYWN0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStCMkIsQUFHMEIsQUFJSiw0Q0FDWCw4QkFKd0IsOEVBQ3hCIiwiZmlsZSI6Ii9Vc2Vycy9qb2hucnViaW8vZ2l0aHViX3Byb2plY3RzL3N3YXBpLXJlYWN0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG5pbXBvcnQgU2VhcmNoIGZyb20gXCIuLi9jb21wb25lbnRzL3NlYXJjaFwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4uL2NvbXBvbmVudHMvbGlzdFwiO1xuaW1wb3J0IEFsZXJ0IGZyb20gXCIuLi9jb21wb25lbnRzL2FsZXJ0XCI7XG5cbmNvbnN0IEluZGV4UGFnZSA9IHByb3BzID0+IHtcbiAgY29uc3QgW2ZpbG1zLCBzZXRGaWxtc10gPSB1c2VTdGF0ZShwcm9wc1swXSk7XG4gIGNvbnN0IFtmYXZzLCBzZXRGYXZzXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW3RvZ2dsZSwgc2V0VG9nZ2xlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dBbGVydCwgc2V0U2hvd0FsZXJ0XSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlZEZhdnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZmF2c1wiKSk7XG4gICAgc2V0RmF2cyhzdG9yZWRGYXZzIHx8IFtdKTtcbiAgfSwgW3RvZ2dsZV0pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxBbGVydCBzaG93QWxlcnQ9e3RydWV9IGhhbmRsZUNsb3NlPXsoKSA9PiBzZXRTaG93QWxlcnQoZmFsc2UpfSAvPlxuICAgICAgPGRpdj5cbiAgICAgICAgPFNlYXJjaCBoYW5kbGVTZWFyY2g9e2ZpbG1MaXN0ID0+IHNldEZpbG1zKGZpbG1MaXN0KX0gLz5cbiAgICAgICAgPGgxPlN0YXIgV2FycyBGaWxtczwvaDE+XG4gICAgICAgIDx1bCBjbGFzc05hbWU9XCJmbGV4XCI+XG4gICAgICAgICAgPExpc3RcbiAgICAgICAgICAgIGZpbG1zPXtmaWxtc31cbiAgICAgICAgICAgIGZhdnM9e2ZhdnN9XG4gICAgICAgICAgICBoYW5kbGVDbGljaz17KCkgPT4gc2V0VG9nZ2xlKCF0b2dnbGUpfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPHN0eWxlIGdsb2JhbCBqc3g+e2BcbiAgICAgICAgICAuZmxleCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmZhdiB7XG4gICAgICAgICAgICBvcmRlcjogLTE7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbkluZGV4UGFnZS5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHVybCA9IFwiaHR0cHM6Ly9zd2FwaS5jby9hcGkvZmlsbXMvXCI7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gIHJldHVybiBbZGF0YS5yZXN1bHRzXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4UGFnZTtcbiJdfQ== */\\n/*@ sourceURL=/Users/johnrubio/github_projects/swapi-react/pages/index.js */\")));\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n  return [data.results];\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","useEffect","fetch","Search","List","Alert","IndexPage","props","films","setFilms","favs","setFavs","toggle","setToggle","showAlert","setShowAlert","storedFavs","JSON","parse","localStorage","getItem","filmList","getInitialProps","url","res","data","json","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACc,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAnB;AACAT,IAAAA,OAAO,CAACK,UAAU,IAAI,EAAf,CAAP;AACD,GAHQ,EAGN,CAACJ,MAAD,CAHM,CAAT;AAKA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,IAAlB;AAAwB,IAAA,WAAW,EAAE,MAAMG,YAAY,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEM,QAAQ,IAAIZ,QAAQ,CAACY,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA,wCAAc,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,WAAW,EAAE,MAAMG,SAAS,CAAC,CAACD,MAAF,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF;AAAA;AAAA;AAAA,qjFAFF,CADF;AA0BD,CArCD;;AAuCAN,SAAS,CAACgB,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,6BAAZ;AACA,QAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACqB,GAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO,CAACD,IAAI,CAACE,OAAN,CAAP;AACD,CAND;;AAQA,eAAerB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\nimport List from \"../components/list\";\nimport Alert from \"../components/alert\";\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  const [favs, setFavs] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n  }, [toggle]);\n\n  return (\n    <>\n      <Alert showAlert={true} handleClose={() => setShowAlert(false)} />\n      <div>\n        <Search handleSearch={filmList => setFilms(filmList)} />\n        <h1>Star Wars Films</h1>\n        <ul className=\"flex\">\n          <List\n            films={films}\n            favs={favs}\n            handleClick={() => setToggle(!toggle)}\n          />\n        </ul>\n\n        <style global jsx>{`\n          .flex {\n            display: flex;\n            flex-direction: column;\n          }\n          .fav {\n            order: -1;\n          }\n        `}</style>\n      </div>\n    </>\n  );\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}