{"ast":null,"code":"var _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const {\n    0: films,\n    1: setFilms\n  } = useState(props[0]);\n  console.log(films);\n\n  const favCheck = () => {\n    const favs = JSON.parse(localStorage.getItem(\"favs\"));\n    const list = films.map(film => {\n      if (favs.indexOf(film.episode_id)) __jsx(\"li\", {\n        key: film.episode_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, film.title, \" - Fav\");\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: filmList => setFilms(filmList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, films.map(film => __jsx(\"li\", {\n    key: film.episode_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, film.title, \" - Fav\"))));\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n  console.log(\"run\"); //map through data, add a fav boolean column\n  // or compare the list of whats in local storage\n\n  return [data.results];\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","fetch","Search","IndexPage","props","films","setFilms","console","log","favCheck","favs","JSON","parse","localStorage","getItem","list","map","film","indexOf","episode_id","title","filmList","getInitialProps","url","res","data","json","results"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CAAlC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,QAAQ,GAAG,MAAM;AACrB,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,UAAMC,IAAI,GAAGV,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AAC7B,UAAIP,IAAI,CAACQ,OAAL,CAAaD,IAAI,CAACE,UAAlB,CAAJ,EACE;AAAI,QAAA,GAAG,EAAEF,IAAI,CAACE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BF,IAAI,CAACG,KAAhC;AACH,KAHY,CAAb;AAID,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEC,QAAQ,IAAIf,QAAQ,CAACe,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACW,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,IAAI,CAACG,KAAhC,WADD,CADH,CAHF,CADF;AAWD,CAvBD;;AAyBAjB,SAAS,CAACmB,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,6BAAZ;AACA,QAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACsB,GAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EALsC,CAOtC;AACA;;AACA,SAAO,CAACiB,IAAI,CAACE,OAAN,CAAP;AACD,CAVD;;AAYA,eAAexB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  console.log(films);\n\n  const favCheck = () => {\n    const favs = JSON.parse(localStorage.getItem(\"favs\"));\n    const list = films.map(film => {\n      if (favs.indexOf(film.episode_id))\n        <li key={film.episode_id}>{film.title} - Fav</li>;\n    });\n  };\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>\n        {films.map(film => (\n          <li key={film.episode_id}>{film.title} - Fav</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n\n  //map through data, add a fav boolean column\n  // or compare the list of whats in local storage\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}