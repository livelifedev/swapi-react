{"ast":null,"code":"var _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const {\n    0: films,\n    1: setFilms\n  } = useState(props[0]);\n  const {\n    0: favs,\n    1: setFavs\n  } = useState([]);\n  console.log(films);\n  let htmlList = films.map(film => __jsx(\"li\", {\n    key: film.episode_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, film.title, \" - Fav\"));\n  useEffect(() => {\n    // when you add new fav, you want this to run again\n    const favs = JSON.parse(localStorage.getItem(\"favs\"));\n\n    if (favs) {\n      const list = films.map(film => {\n        if (favs.indexOf(film.episode_id) > 0) {\n          __jsx(\"li\", {\n            key: film.episode_id,\n            className: \"fav\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, film.title, \" - unFav\");\n        } else {\n          __jsx(\"li\", {\n            key: film.episode_id,\n            className: \"nonfav\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, film.title, \" - Fav\");\n        }\n      });\n      console.log(list);\n    } // htmlList = <li>Test</li>;\n    // setFavs([\"test\"]);\n\n\n    console.log(\"useEffect run\");\n  }, [favs]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: filmList => setFilms(filmList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, htmlList));\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","useEffect","fetch","Search","IndexPage","props","films","setFilms","favs","setFavs","console","log","htmlList","map","film","episode_id","title","JSON","parse","localStorage","getItem","list","indexOf","filmList","getInitialProps","url","res","data","json","results"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,QAAQ,GAAGN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAC3B;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,IAAI,CAACE,KAAhC,WADa,CAAf;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,QAAIZ,IAAJ,EAAU;AACR,YAAMa,IAAI,GAAGf,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AAC7B,YAAIN,IAAI,CAACc,OAAL,CAAaR,IAAI,CAACC,UAAlB,IAAgC,CAApC,EAAuC;AACrC;AAAI,YAAA,GAAG,EAAED,IAAI,CAACC,UAAd;AAA0B,YAAA,SAAS,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACE,KADR;AAGD,SAJD,MAIO;AACL;AAAI,YAAA,GAAG,EAAEF,IAAI,CAACC,UAAd;AAA0B,YAAA,SAAS,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACE,KADR;AAGD;AACF,OAVY,CAAb;AAWAN,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,KAhBa,CAiBd;AACA;;;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GApBQ,EAoBN,CAACH,IAAD,CApBM,CAAT;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEe,QAAQ,IAAIhB,QAAQ,CAACgB,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,QAAL,CAHF,CADF;AAOD,CArCD;;AAuCAR,SAAS,CAACoB,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,6BAAZ;AACA,QAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACuB,GAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,SAAO,CAACgB,IAAI,CAACE,OAAN,CAAP;AACD,CAPD;;AASA,eAAezB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  const [favs, setFavs] = useState([]);\n  console.log(films);\n  let htmlList = films.map(film => (\n    <li key={film.episode_id}>{film.title} - Fav</li>\n  ));\n\n  useEffect(() => {\n    // when you add new fav, you want this to run again\n    const favs = JSON.parse(localStorage.getItem(\"favs\"));\n    if (favs) {\n      const list = films.map(film => {\n        if (favs.indexOf(film.episode_id) > 0) {\n          <li key={film.episode_id} className=\"fav\">\n            {film.title} - unFav\n          </li>;\n        } else {\n          <li key={film.episode_id} className=\"nonfav\">\n            {film.title} - Fav\n          </li>;\n        }\n      });\n      console.log(list);\n    }\n    // htmlList = <li>Test</li>;\n    // setFavs([\"test\"]);\n    console.log(\"useEffect run\");\n  }, [favs]);\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>{htmlList}</ul>\n    </div>\n  );\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}