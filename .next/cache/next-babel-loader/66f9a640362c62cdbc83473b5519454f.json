{"ast":null,"code":"var _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst createList = films => {\n  return films.map(film => __jsx(\"li\", {\n    key: film.episode_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, film.title, \" - Fav\"));\n};\n\nconst IndexPage = props => {\n  const {\n    0: films,\n    1: setFilms\n  } = useState(props[0]);\n  const {\n    0: favs,\n    1: setFavs\n  } = useState([]);\n  const {\n    0: html,\n    1: setHtml\n  } = useState(createList(films));\n  console.log(films);\n  console.log(html); //htmlList will not change, unless its a state\n  // let htmlList = films.map(film => (\n  //   <li key={film.episode_id}>{film.title} - Fav</li>\n  // ));\n\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []); // if (StoredFavs) {\n    //   const list = films.map(film => {\n    //     if (favs.indexOf(film.episode_id) > 0) {\n    //       <li key={film.episode_id} className=\"fav\">\n    //         {film.title} - unFav\n    //       </li>;\n    //     } else {\n    //       <li key={film.episode_id} className=\"nonfav\">\n    //         {film.title} - Fav\n    //       </li>;\n    //     }\n    //   });\n    //   console.log(list);\n    // }\n    // setFavs([\"test\"]);\n\n    console.log(\"useEffect run\");\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: filmList => setFilms(filmList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, html), __jsx(\"button\", {\n    onClick: () => setHtml(__jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"test\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Fav\"));\n}; // onclick of fave, will push to local storage, will update fav state\n\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","useEffect","fetch","Search","createList","films","map","film","episode_id","title","IndexPage","props","setFilms","favs","setFavs","html","setHtml","console","log","storedFavs","JSON","parse","localStorage","getItem","filmList","getInitialProps","url","res","data","json","results"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,SAAOA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,IAAI,CAACE,KAAhC,WAAlB,CAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQO;AAAR,MAAoBZ,QAAQ,CAACW,KAAK,CAAC,CAAD,CAAN,CAAlC;AACA,QAAM;AAAA,OAACE,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACe,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAACI,UAAU,CAACC,KAAD,CAAX,CAAhC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EALyB,CAOzB;AACA;AACA;AACA;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAnB;AACAT,IAAAA,OAAO,CAACK,UAAU,IAAI,EAAf,CAAP,CAFc,CAId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEM,QAAQ,IAAIZ,QAAQ,CAACY,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAL,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF;AAQD,CA1CD,C,CA4CA;;;AAEAN,SAAS,CAACe,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,6BAAZ;AACA,QAAMC,GAAG,GAAG,MAAMzB,KAAK,CAACwB,GAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,SAAO,CAACU,IAAI,CAACE,OAAN,CAAP;AACD,CAPD;;AASA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst createList = films => {\n  return films.map(film => <li key={film.episode_id}>{film.title} - Fav</li>);\n};\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  const [favs, setFavs] = useState([]);\n  const [html, setHtml] = useState(createList(films));\n  console.log(films);\n  console.log(html);\n\n  //htmlList will not change, unless its a state\n  // let htmlList = films.map(film => (\n  //   <li key={film.episode_id}>{film.title} - Fav</li>\n  // ));\n\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n\n    // if (StoredFavs) {\n    //   const list = films.map(film => {\n    //     if (favs.indexOf(film.episode_id) > 0) {\n    //       <li key={film.episode_id} className=\"fav\">\n    //         {film.title} - unFav\n    //       </li>;\n    //     } else {\n    //       <li key={film.episode_id} className=\"nonfav\">\n    //         {film.title} - Fav\n    //       </li>;\n    //     }\n    //   });\n    //   console.log(list);\n    // }\n    // setFavs([\"test\"]);\n    console.log(\"useEffect run\");\n  }, []);\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>{html}</ul>\n      <button onClick={() => setHtml(<li>test</li>)}>Fav</button>\n    </div>\n  );\n};\n\n// onclick of fave, will push to local storage, will update fav state\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}