{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/components/search.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nvar Search = function Search(_ref) {\n  var handleSearch = _ref.handleSearch;\n\n  var _useState = useState(\"\"),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var filmList = [];\n\n  var queryFilms =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(q) {\n      var url, res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"https://swapi.co/api/films/?search=\".concat(q);\n              _context.next = 3;\n              return fetch(url);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function queryFilms(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      console.log(\"search\", state);\n      e.preventDefault();\n      handleSearch(filmList);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"search-bar\",\n    id: \"search-bar\",\n    placeholder: \"Search films...\",\n    value: state,\n    onChange: function onChange(e) {\n      return setState(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Search\"));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/components/search.js"],"names":["React","useState","Search","handleSearch","state","setState","filmList","queryFilms","q","url","fetch","res","json","data","e","console","log","preventDefault","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsB;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACTF,QAAQ,CAAC,EAAD,CADC;AAAA,MAC5BG,KAD4B;AAAA,MACrBC,QADqB;;AAEnC,MAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,GADW,gDACiCD,CADjC;AAAA;AAAA,qBAECE,KAAK,CAACD,GAAD,CAFN;;AAAA;AAEXE,cAAAA,GAFW;AAAA;AAAA,qBAGEA,GAAG,CAACC,IAAJ,EAHF;;AAAA;AAGXC,cAAAA,IAHW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVN,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAMA,SACE;AACE,IAAA,QAAQ,EAAE,kBAAAO,CAAC,EAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,KAAtB;AACAU,MAAAA,CAAC,CAACG,cAAF;AACAd,MAAAA,YAAY,CAACG,QAAD,CAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIT,QAAQ,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAZ;AAAA,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADF;AAmBD,CA5BD;;AA8BA,eAAejB,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Search = ({ handleSearch }) => {\n  const [state, setState] = useState(\"\");\n  const filmList = [];\n  const queryFilms = async q => {\n    const url = `https://swapi.co/api/films/?search=${q}`;\n    const res = await fetch(url);\n    const data = await res.json();\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        console.log(\"search\", state);\n        e.preventDefault();\n        handleSearch(filmList);\n      }}\n    >\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar\"\n        placeholder=\"Search films...\"\n        value={state}\n        onChange={e => setState(e.target.value)}\n      />\n      <button>Search</button>\n    </form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}