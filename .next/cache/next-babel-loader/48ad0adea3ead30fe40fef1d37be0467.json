{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\nimport List from \"../components/list\";\n\nvar favClick = function favClick(id) {\n  var storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  storedFavs.push(id);\n  localStorage.setItem(\"favs\", _JSON$stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nvar IndexPage = function IndexPage(props) {\n  var _useState = useState(props[0]),\n      films = _useState[0],\n      setFilms = _useState[1];\n\n  var _useState2 = useState([]),\n      favs = _useState2[0],\n      setFavs = _useState2[1]; //   const [html, setHtml] = useState(createList(films));\n\n\n  var _useState3 = useState(false),\n      toggle = _useState3[0],\n      setToggle = _useState3[1];\n\n  useEffect(function () {\n    var storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []); // setHtml(createList(films, favClick, storedFavs));\n\n    console.log(\"useEffect run\");\n  }, [toggle]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: function handleSearch(filmList) {\n      return setFilms(filmList);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(List, {\n    films: films,\n    clickHandler: favClick,\n    favs: favs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}; // onclick of fave, will push to local storage, will update fav state\n\n\nIndexPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://swapi.co/api/films/\";\n          _context.next = 3;\n          return fetch(url);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          console.log(\"run\");\n          return _context.abrupt(\"return\", [data.results]);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","useEffect","fetch","Search","List","favClick","id","storedFavs","JSON","parse","localStorage","getItem","push","setItem","alert","IndexPage","props","films","setFilms","favs","setFavs","toggle","setToggle","console","log","filmList","getInitialProps","url","res","json","data","results"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,EAAE,EAAI;AACrB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA/D;AACAJ,EAAAA,UAAU,CAACK,IAAX,CAAgBN,EAAhB;AACAI,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6B,gBAAeN,UAAf,CAA7B;AACAO,EAAAA,KAAK,CAAC,YAAD,CAAL;AACD,CALD;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBACChB,QAAQ,CAACgB,KAAK,CAAC,CAAD,CAAN,CADT;AAAA,MAClBC,KADkB;AAAA,MACXC,QADW;;AAAA,mBAEDlB,QAAQ,CAAC,EAAD,CAFP;AAAA,MAElBmB,IAFkB;AAAA,MAEZC,OAFY,kBAGzB;;;AAHyB,mBAIGpB,QAAQ,CAAC,KAAD,CAJX;AAAA,MAIlBqB,MAJkB;AAAA,MAIVC,SAJU;;AAMzBrB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAnB;AACAS,IAAAA,OAAO,CAACb,UAAU,IAAI,EAAf,CAAP,CAFc,CAGd;;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GANQ,EAMN,CAACH,MAAD,CANM,CAAT;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAE,sBAAAI,QAAQ;AAAA,aAAIP,QAAQ,CAACO,QAAD,CAAZ;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,KAAb;AAAoB,IAAA,YAAY,EAAEZ,QAAlC;AAA4C,IAAA,IAAI,EAAEc,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF;AASD,CAvBD,C,CAyBA;;;AAEAJ,SAAS,CAACW,eAAV;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,GADoB,GACd,6BADc;AAAA;AAAA,iBAERzB,KAAK,CAACyB,GAAD,CAFG;;AAAA;AAEpBC,UAAAA,GAFoB;AAAA;AAAA,iBAGPA,GAAG,CAACC,IAAJ,EAHO;;AAAA;AAGpBC,UAAAA,IAHoB;AAK1BP,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAL0B,2CAMnB,CAACM,IAAI,CAACC,OAAN,CANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AASA,eAAehB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\nimport List from \"../components/list\";\n\nconst favClick = id => {\n  const storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  storedFavs.push(id);\n  localStorage.setItem(\"favs\", JSON.stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  const [favs, setFavs] = useState([]);\n  //   const [html, setHtml] = useState(createList(films));\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n    // setHtml(createList(films, favClick, storedFavs));\n\n    console.log(\"useEffect run\");\n  }, [toggle]);\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>\n        <List films={films} clickHandler={favClick} favs={favs} />\n      </ul>\n    </div>\n  );\n};\n\n// onclick of fave, will push to local storage, will update fav state\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}