{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\n\nvar IndexPage = function IndexPage() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"The Main Page\"));\n};\n\nIndexPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://swapi.co/api/films/\";\n          _context.next = 3;\n          return fetch(\"http://example.com/movies.json\");\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["fetch","IndexPage","getInitialProps","url","res","json","data","console","log","length","shows","map","entry","show"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADgB;AAAA,CAAlB;;AAMAA,SAAS,CAACC,eAAV;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,GADoB,GACd,6BADc;AAAA;AAAA,iBAERH,KAAK,CAAC,gCAAD,CAFG;;AAAA;AAEpBI,UAAAA,GAFoB;AAAA;AAAA,iBAGPA,GAAG,CAACC,IAAJ,EAHO;;AAAA;AAGpBC,UAAAA,IAHoB;AAK1BC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAL0B,2CAOnB;AACLC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAYA,eAAeZ,SAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst IndexPage = () => (\n  <div>\n    <h1>The Main Page</h1>\n  </div>\n);\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(\"http://example.com/movies.json\");\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}