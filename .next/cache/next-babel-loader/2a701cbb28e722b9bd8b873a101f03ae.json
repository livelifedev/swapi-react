{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/components/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar favClick = function favClick(id) {\n  var storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  storedFavs.push(id);\n  localStorage.setItem(\"favs\", _JSON$stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nvar unFavClick = function unFavClick(id) {\n  var storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  var index = favorites.indexOf(nodeString);\n  storedFavs.splice(index, 1);\n  localStorage.setItem(\"favs\", _JSON$stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nvar List = function List(_ref) {\n  var films = _ref.films,\n      favs = _ref.favs,\n      handleClick = _ref.handleClick;\n  var list = films.map(function (film) {\n    if (favs.indexOf(film.episode_id) >= 0) {\n      return __jsx(\"li\", {\n        key: film.episode_id,\n        className: \"fav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, film.title, \" -\", \" \", __jsx(\"button\", {\n        onClick: function onClick() {\n          unFavClick(film.episode_id);\n          handleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"unFav\"));\n    } else {\n      return __jsx(\"li\", {\n        key: film.episode_id,\n        className: \"nonfav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, film.title, \" -\", \" \", __jsx(\"button\", {\n        onClick: function onClick() {\n          favClick(film.episode_id);\n          handleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Fav\"));\n    }\n  });\n  return list;\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/components/list.js"],"names":["favClick","id","storedFavs","JSON","parse","localStorage","getItem","push","setItem","alert","unFavClick","index","favorites","indexOf","nodeString","splice","List","films","favs","handleClick","list","map","film","episode_id","title"],"mappings":";;;;;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,EAAE,EAAI;AACrB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA/D;AACAJ,EAAAA,UAAU,CAACK,IAAX,CAAgBN,EAAhB;AACAI,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6B,gBAAeN,UAAf,CAA7B;AACAO,EAAAA,KAAK,CAAC,YAAD,CAAL;AACD,CALD;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAT,EAAE,EAAI;AACvB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAA/D;AACA,MAAMK,KAAK,GAAGC,SAAS,CAACC,OAAV,CAAkBC,UAAlB,CAAd;AAEAZ,EAAAA,UAAU,CAACa,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACAN,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6B,gBAAeN,UAAf,CAA7B;AACAO,EAAAA,KAAK,CAAC,YAAD,CAAL;AACD,CAPD;;AASA,IAAMO,IAAI,GAAG,SAAPA,IAAO,OAAkC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC7C,MAAMC,IAAI,GAAGH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC7B,QAAIJ,IAAI,CAACL,OAAL,CAAaS,IAAI,CAACC,UAAlB,KAAiC,CAArC,EAAwC;AACtC,aACE;AAAI,QAAA,GAAG,EAAED,IAAI,CAACC,UAAd;AAA0B,QAAA,SAAS,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,KADR,QACiB,GADjB,EAEE;AACE,QAAA,OAAO,EAAE,mBAAM;AACbd,UAAAA,UAAU,CAACY,IAAI,CAACC,UAAN,CAAV;AACAJ,UAAAA,WAAW;AACZ,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAaD,KAdD,MAcO;AACL,aACE;AAAI,QAAA,GAAG,EAAEG,IAAI,CAACC,UAAd;AAA0B,QAAA,SAAS,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,KADR,QACiB,GADjB,EAEE;AACE,QAAA,OAAO,EAAE,mBAAM;AACbxB,UAAAA,QAAQ,CAACsB,IAAI,CAACC,UAAN,CAAR;AACAJ,UAAAA,WAAW;AACZ,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAaD;AACF,GA9BY,CAAb;AA+BA,SAAOC,IAAP;AACD,CAjCD;;AAmCA,eAAeJ,IAAf","sourcesContent":["const favClick = id => {\n  const storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  storedFavs.push(id);\n  localStorage.setItem(\"favs\", JSON.stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nconst unFavClick = id => {\n  const storedFavs = JSON.parse(localStorage.getItem(\"favs\")) || [];\n  const index = favorites.indexOf(nodeString);\n\n  storedFavs.splice(index, 1);\n  localStorage.setItem(\"favs\", JSON.stringify(storedFavs));\n  alert(\"favourited\");\n};\n\nconst List = ({ films, favs, handleClick }) => {\n  const list = films.map(film => {\n    if (favs.indexOf(film.episode_id) >= 0) {\n      return (\n        <li key={film.episode_id} className=\"fav\">\n          {film.title} -{\" \"}\n          <button\n            onClick={() => {\n              unFavClick(film.episode_id);\n              handleClick();\n            }}\n          >\n            unFav\n          </button>\n        </li>\n      );\n    } else {\n      return (\n        <li key={film.episode_id} className=\"nonfav\">\n          {film.title} -{\" \"}\n          <button\n            onClick={() => {\n              favClick(film.episode_id);\n              handleClick();\n            }}\n          >\n            Fav\n          </button>\n        </li>\n      );\n    }\n  });\n  return list;\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}