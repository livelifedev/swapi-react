{"ast":null,"code":"var _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst favClick = () => {\n  console.log(localStorage); //   localStorage.setItem(\"favs\", JSON.stringify(favs));\n  //   alert(\"favourited\");\n};\n\nconst createList = (films, clickHandler, favs = []) => {\n  const list = films.map(film => {\n    if (favs.indexOf(film.episode_id) > 0) {\n      return __jsx(\"li\", {\n        key: film.episode_id,\n        className: \"fav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, film.title, \" - unFav\");\n    } else {\n      return __jsx(\"li\", {\n        key: film.episode_id,\n        className: \"nonfav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, film.title, \" - \", __jsx(\"button\", {\n        onClick: clickHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Fav\"));\n    }\n  });\n  return list;\n};\n\nconst IndexPage = props => {\n  const {\n    0: films,\n    1: setFilms\n  } = useState(props[0]);\n  const {\n    0: favs,\n    1: setFavs\n  } = useState([]);\n  const {\n    0: html,\n    1: setHtml\n  } = useState(createList(films, favClick));\n  const {\n    0: toggle,\n    1: setToggle\n  } = useState(false);\n  console.log(films);\n  useEffect(() => {\n    console.log(\"effect\", favs);\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n    setHtml(createList(films, favs));\n    console.log(\"useEffect run\");\n  }, [toggle]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: filmList => setFilms(filmList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, html));\n}; // onclick of fave, will push to local storage, will update fav state\n\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","useEffect","fetch","Search","favClick","console","log","localStorage","createList","films","clickHandler","favs","list","map","film","indexOf","episode_id","title","IndexPage","props","setFilms","setFavs","html","setHtml","toggle","setToggle","storedFavs","JSON","parse","getItem","filmList","getInitialProps","url","res","data","json","results"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst favClick = () => {\n  console.log(localStorage);\n  //   localStorage.setItem(\"favs\", JSON.stringify(favs));\n  //   alert(\"favourited\");\n};\n\nconst createList = (films, clickHandler, favs = []) => {\n  const list = films.map(film => {\n    if (favs.indexOf(film.episode_id) > 0) {\n      return (\n        <li key={film.episode_id} className=\"fav\">\n          {film.title} - unFav\n        </li>\n      );\n    } else {\n      return (\n        <li key={film.episode_id} className=\"nonfav\">\n          {film.title} - <button onClick={clickHandler()}>Fav</button>\n        </li>\n      );\n    }\n  });\n  return list;\n};\n\nconst IndexPage = props => {\n  const [films, setFilms] = useState(props[0]);\n  const [favs, setFavs] = useState([]);\n  const [html, setHtml] = useState(createList(films, favClick));\n  const [toggle, setToggle] = useState(false);\n  console.log(films);\n\n  useEffect(() => {\n    console.log(\"effect\", favs);\n    const storedFavs = JSON.parse(localStorage.getItem(\"favs\"));\n    setFavs(storedFavs || []);\n    setHtml(createList(films, favs));\n\n    console.log(\"useEffect run\");\n  }, [toggle]);\n\n  return (\n    <div>\n      <Search handleSearch={filmList => setFilms(filmList)} />\n      <h1>Star Wars Films</h1>\n      <ul>{html}</ul>\n    </div>\n  );\n};\n\n// onclick of fave, will push to local storage, will update fav state\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}