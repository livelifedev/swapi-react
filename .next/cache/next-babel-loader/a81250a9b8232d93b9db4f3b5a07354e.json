{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/johnrubio/github_projects/swapi-react/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nvar IndexPage = function IndexPage(props) {\n  var _useState = useState(\"\"),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(props[0]),\n      films = _useState2[0],\n      setFilms = _useState2[1];\n\n  console.log(films);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Search, {\n    handleSearch: function handleSearch(list) {\n      return setFilms(list);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Star Wars Films\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, films.map(function (film) {\n    return __jsx(\"li\", {\n      key: film.episode_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, film.title);\n  })));\n};\n\nIndexPage.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://swapi.co/api/films/\";\n          _context.next = 3;\n          return fetch(url);\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          console.log(\"run\");\n          return _context.abrupt(\"return\", [data.results]);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default IndexPage;","map":{"version":3,"sources":["/Users/johnrubio/github_projects/swapi-react/pages/index.js"],"names":["React","useState","fetch","Search","IndexPage","props","state","setState","films","setFilms","console","log","list","map","film","episode_id","title","getInitialProps","url","res","json","data","results"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBACCJ,QAAQ,CAAC,EAAD,CADT;AAAA,MAClBK,KADkB;AAAA,MACXC,QADW;;AAAA,mBAECN,QAAQ,CAACI,KAAK,CAAC,CAAD,CAAN,CAFT;AAAA,MAElBG,KAFkB;AAAA,MAEXC,QAFW;;AAGzBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAE,sBAAAI,IAAI;AAAA,aAAIH,QAAQ,CAACG,IAAD,CAAZ;AAAA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,IAAI,CAACE,KAAhC,CADa;AAAA,GAAd,CADH,CAHF,CADF;AAWD,CAhBD;;AAkBAZ,SAAS,CAACa,eAAV;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,GADoB,GACd,6BADc;AAAA;AAAA,iBAERhB,KAAK,CAACgB,GAAD,CAFG;;AAAA;AAEpBC,UAAAA,GAFoB;AAAA;AAAA,iBAGPA,GAAG,CAACC,IAAJ,EAHO;;AAAA;AAGpBC,UAAAA,IAHoB;AAK1BX,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAL0B,2CAOnB,CAACU,IAAI,CAACC,OAAN,CAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAUA,eAAelB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Search from \"../components/search\";\n\nconst IndexPage = props => {\n  const [state, setState] = useState(\"\");\n  const [films, setFilms] = useState(props[0]);\n  console.log(films);\n\n  return (\n    <div>\n      <Search handleSearch={list => setFilms(list)} />\n      <h1>Star Wars Films</h1>\n      <ul>\n        {films.map(film => (\n          <li key={film.episode_id}>{film.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nIndexPage.getInitialProps = async () => {\n  const url = \"https://swapi.co/api/films/\";\n  const res = await fetch(url);\n  const data = await res.json();\n\n  console.log(\"run\");\n\n  return [data.results];\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}